@model PizzeriaOnline.ViewModels.CheckoutViewModel
@if (!ViewData.ModelState.IsValid)
{
	<div class="alert alert-danger">
		<strong>Errores de Validación Encontrados:</strong>
		<ul>
			@foreach (var value in ViewData.ModelState.Values)
			{
				@foreach (var error in value.Errors)
				{
					<li>@error.ErrorMessage</li>
				}
			}
		</ul>
	</div>
}

@{
	ViewData["Title"] = "Finalizar Pedido";
}

<h1>@ViewData["Title"]</h1>
<p>Por favor, confirma tu pedido y proporciona tus datos para la entrega</p>

<div class="row">
	<div class="col-md-7">
		<h4>Resumen de tu Carrito</h4>
		<table class="table">
			<tbody>
				@foreach (var item in Model.Carrito)
				{
					<tr>
						<td>
							<strong>@item.NombreTamaño</strong>
							<ul class="list-unstyled mb-0 ps-3">
								@foreach(var sabor in item.NombresSabores)
								{
									<li><small>- @sabor</small></li>
								}
							</ul>
						</td>
						<td class="text-end">@item.PrecioFinal.ToString("C")</td>
					</tr>
				}

				@foreach (var extra in Model.CarritoExtras)
				{
					<tr>
						<td>@extra.Nombre <span class="text-muted">x @extra.Cantidad</span></td>
						<td class="text-end">@extra.Subtotal.ToString("C")</td>
						<td class="text-end" style="width: 100px;">
							<form asp-action="QuitarExtra" method="post" class="d-inline">
								<input type="hidden" name="productoExtraId" value="@extra.ProductoExtraId" />
								<button type="submit" class="btn btn-danger btn-sm">Quitar</button>
							</form>
						</td>
					</tr>
				}
			</tbody>
		</table>
		@{
			var totalFinal = Model.TotalCarrito + Model.CarritoExtras.Sum(e => e.Subtotal);
		}
		<h4 class="text-end">Total: <span class="text-success">@totalFinal.ToString("C")</span></h4>
		<hr />
		<h4 class="mt-4">¿Desería añadir algo más?</h4>
		<div class="row">
			@foreach (var extra in Model.ExtrasDisponibles)
			{
				<div class="col-md-4 mb-3">
					<div class="card h-100">
						<img src="@extra.RutaImagen" class="card-img-top" alt="@extra.Nombre" style="height: 150px; object-fit: cover;" />
						<div class="card-body d-flex flex-column">
							<h5 class="card-title">@extra.Nombre</h5>
							<p class="card-text fw-bold text-success">@extra.Precio.ToString("C")</p>

							<form asp-action="AgregarExtra" asp-controller="Home" method="post" class="mt-auto">
								<input type="hidden" name="productoExtraId" value="@extra.Id" />
								<input type="hidden" name="cantidad" value="1" />
								<button type="submit" class="btn btn-info w-100">Añadir</button>
							</form>
						</div>
					</div>
				</div>
			}
		</div>
		<hr />
	</div>
	<div class="col-md-5">
		<h4>Tus Datos</h4>
		<h4>Ubicación de Entrega</h4>
		<div id="map" style="height: 300px; width:100%;" class="mb-3"></div>
		<form asp-action="FinalizarPedido" method="post">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Latitud"/>
			<input type="hidden" asp-for="Longitud"/>

			<div class="mb-3">
				<label asp-for="NombreCliente" class="form-label">Nombre Completo</label>
				<input asp-for="NombreCliente" class="form-control"/>
				<span asp-validation-for="NombreCliente" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="DireccionEntrega" class="form-label">Dirección de Entrega</label>
				<input asp-for="DireccionEntrega" class="form-control"/>
				<span asp-validation-for="DireccionEntrega" class="text-danger"></span>
			</div>
			<div class="mb-3">
				<label asp-for="Telefono" class="form-label">Teléfono</label>
				<input asp-for="Telefono" class="form-control"/>
				<span asp-validation-for="Telefono" class="text-danger"></span>
			</div>

			<div class="d-grid gap-2 mt-4">
				<button type="submit" class="btn btn-primary btn-lg">Confirmar y Realizar Pedido</button>
				<a asp-action="Carrito" class="btn btn-outline-secondary">Volver al Carrito</a>
			</div>
		</form>"
	</div>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@section MapScripts {
	<script>
		let map;
		let marker;
		// Coordenadas iniciales (Centro de Tenancingo de Degollado)
		const initialPos = { lat: 18.9642, lng: -99.5936 };

		// Referencias a los campos del formulario
		const latitudInput = document.getElementById("Latitud");
		const longitudInput = document.getElementById("Longitud");
		const direccionInput = document.getElementById("DireccionEntrega");

		function initMap() {
			map = new google.maps.Map(document.getElementById("map"), {
				center: initialPos, // Se centrará en la ubicación inicial que definimos
				zoom: 15,
			});

			marker = new google.maps.Marker({
				position: initialPos,
				map: map,
				draggable: true // El pin se puede arrastrar
			});

			// Actualizamos los campos la primera vez con la posición inicial
			updateFormFields(initialPos.lat, initialPos.lng);

			// Evento que se dispara solo cuando terminas de arrastrar el pin
			google.maps.event.addListener(marker, 'dragend', function (event) {
				const lat = this.getPosition().lat();
				const lng = this.getPosition().lng();
				updateFormFields(lat, lng);
			});
		}

		function updateFormFields(lat, lng) {
			// 1. Guardamos las coordenadas en los campos ocultos
			latitudInput.value = lat.toString().replace(',', '.');
			longitudInput.value = lng.toString().replace(',', '.');

			// 2. Usamos la Geocoding API para obtener la dirección
			const geocoder = new google.maps.Geocoder();
			geocoder.geocode({ 'location': { lat: lat, lng: lng } }, function (results, status) {
				if (status === 'OK') {
					if (results[0]) {
						// Ponemos la dirección encontrada en el campo de texto visible
						direccionInput.value = results[0].formatted_address;
					} else {
						window.alert('No se encontraron resultados de dirección');
					}
				} else {
					window.alert('Geocoder falló debido a: ' + status);
				}
			});
		}
	</script>

	@* Carga la API de Google Maps. REEMPLAZA "TU_API_KEY" con tu llave *@
	<script async defer
			src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDCeP0vkmlWa2XjS6yId_h1wWhfIBjn3FU&callback=initMap">
	</script>
}