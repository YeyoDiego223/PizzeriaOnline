@model PizzeriaOnline.ViewModels.CheckoutViewModel
@{
    ViewData["Title"] = "Finalizar Pedido";
}

<h1>@ViewData["Title"]</h1>
<p>Por favor, confirma tu pedido y proporciona tus datos para la entrega.</p>

<form asp-action="FinalizarPedido" method="post">
    <div class="row g-5">
        @* <-- Usamos 'g-5' para dar un buen espaciado entre columnas *@

        @* --- COLUMNA IZQUIERDA: RESUMEN --- *@
        <div class="col-md-7">
            <h4>Resumen de tu Carrito</h4>
            <table class="table">
                <tbody>
                    @foreach (var item in Model.Carrito)
                    {
                        <tr>
                            <td>
                                <strong>@item.NombreTamaño</strong>
                                <ul class="list-unstyled mb-0 ps-3">
                                    @foreach (var sabor in item.NombresSabores)
                                    {
                                        <li><small>- @sabor</small></li>
                                    }
                                </ul>
                            </td>
                            <td class="text-end">@item.PrecioFinal.ToString("C")</td>
                        </tr>
                    }
                    @foreach (var extra in Model.CarritoExtras)
                    {
                        <tr>
                            <td>@extra.Nombre x @extra.Cantidad</td>
                            <td class="text-end">@extra.Subtotal.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
            <hr />
            @{
                var TotalFinal = Model.Carrito.Sum(p => p.PrecioFinal * p.Cantidad) + Model.CarritoExtras.Sum(e => e.Subtotal);
            }
            <h3 class="text-end">Total: <span class="text-success fw-bold">@TotalFinal.ToString("C")</span></h3>
        </div>

        @* --- COLUMNA DERECHA: DATOS Y MAPA --- *@
        <div class="col-md-5">
            <h4>Tus Datos</h4>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Latitud" />
            <input type="hidden" asp-for="Longitud" />

            <h5 class="mt-4">Ubicación de Entrega</h5>
            <div id="map" style="height:300px; width:100%;" class="mb-3 rounded"></div>

            <div class="mb-3">
                <label asp-for="NombreCliente" class="form-label">Nombre Completo</label>
                <input asp-for="NombreCliente" class="form-control" />
                <span asp-validation-for="NombreCliente" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="DireccionEntrega" class="form-label">Dirección de Entrega</label>
                <input asp-for="DireccionEntrega" class="form-control" readonly />
                <span asp-validation-for="DireccionEntrega" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Telefono" class="form-label"></label>
                <input asp-for="Telefono" class="form-control" />
                <span asp-validation-for="Telefono" class="text-danger"></span>
            </div>

            <h5 class="mt-4">Método de Pago</h5>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="MetodoPago" id="pagoEfectivo" value="Efectivo" checked>
                <label class="form-check-label" for="pagoEfectivo">
                    Pago en Efectivo (al recibir)
                </label>
            </div>

            <div class="d-grid gap-2 mt-4">
                <button type="submit" class="btn btn-primary btn-lg">Confirmar y Realizar Pedido</button>
                <a asp-action="Carrito" class="btn btn-outline-secondary">Volver al Carrito</a>
            </div>
        </div>
    </div>
</form>

@* Las secciones de Scripts y MapScripts se quedan igual *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@section MapScripts {
    @* ... tu script de Google Maps se queda exactamente igual ... *@
    <script>
        let map;
        let marker;
        const initialPos = { lat: 18.9642, lng: -99.5936 };

        const latitudInput = document.getElementById("Latitud");
        const longitudInput = document.getElementById("Longitud");
        const direccionInput = document.getElementById("DireccionEntrega");

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: initialPos,
                zoom: 15,
            });
            marker = new google.maps.Marker({
                position: initialPos,
                map: map,
                draggable: true
            });
            updateFormFields(initialPos.lat, initialPos.lng);
            google.maps.event.addListener(marker, 'dragend', function (event) {
                updateFormFields(this.getPosition().lat(), this.getPosition().lng());
            });
        }

        function updateFormFields(lat, lng) {
            latitudInput.value = lat.toString().replace(',', '.');
            longitudInput.value = lng.toString().replace(',', '.');

            const geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'location': { lat: lat, lng: lng } }, function (results, status) {
                if (status === 'OK' && results[0]) {
                    direccionInput.value = results[0].formatted_address;
                }
            });
        }
    </script>
    <script async
            src="https://maps.googleapis.com/maps/api/js?key=@ViewData["GoogleApiKey"]&callback=initMap">
    </script>
}